{"version":3,"sources":["re_com/nested_v_grid/parts.cljs"],"mappings":"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","names":["re-com.nested-v-grid.parts/box-style","position","G__73823","cljs.core/Keyword","js/Error","p__73825","map__73826","cljs.core/--destructure-map","cljs.core.get","re-com.nested-v-grid.parts/header-label","path","spec","cljs.core/peek","or__5043__auto__","G__73828","G__73830","re-com.nested-v-grid.parts/row-header-label","re-com.nested-v-grid.parts/column-header-label","re-com.nested-v-grid.parts/grid-line-button","_","hover?","reagent.core.atom","p__73838","map__73840","on-mouse-down","style","cljs.core.merge","G__73841","cljs.core/deref","cljs.core/reset!","p__73849","map__73850","re-com.nested-v-grid.parts/drag-overlay","x-start","y-start","on-mouse-move","on-mouse-up","size-dimension","p1__73846#","x","y","G__73851","G__73852","p__73857","map__73859","re-com.nested-v-grid.parts/resizer","keypath","size","offset","overlay","on-resize","index","header-dimension","G__73864","G__73869","cljs.core._EQ_","re-com.nested-v-grid.util/path->grid-line-name","G__73875","e","p__73878","map__73880","dx","dy","G__73881","G__73887","x__5128__auto__","y__5129__auto__"],"sourcesContent":["(ns re-com.nested-v-grid.parts\n  (:require\n   [reagent.core :as r]\n   [re-com.nested-v-grid.util :as ngu]))\n\n(defn box-style [position]\n  (case position\n    :top    {:top    -2 :left  0  :height 5 :width  \"100%\"}\n    :bottom {:bottom -3 :left  0  :height 5 :width  \"100%\"}\n    :left   {:top    0  :left  -2 :width  5 :height \"100%\"}\n    :right  {:top    0  :right -3 :width  5 :height \"100%\"}))\n\n(defn header-label [{:keys [path]}]\n  (let [spec (peek path)]\n    [:div\n     (or (:label spec)\n         (some-> spec :id str)\n         (some-> spec str))]))\n\n(def row-header-label header-label)\n\n(def column-header-label header-label)\n\n(defn grid-line-button [_]\n  (let [hover? (r/atom nil)]\n    (fn [{:keys [on-mouse-down position style]}]\n      [:div {:style         (merge {:position   :absolute\n                                    :cursor     (case position\n                                                  (:left :right) :col-resize\n                                                  (:top :bottom) :row-resize)\n                                    :background \"rgba(0,0,0,0.1)\"\n                                    :box-shadow \"0 0 4px rgba(0,0,0,0.1)\"\n                                    :opacity    (if @hover? 1 0)}\n                                   (box-style position)\n                                   style)\n             :on-mouse-down on-mouse-down\n             :on-mouse-over #(reset! hover? true)\n             :on-mouse-out  #(reset! hover? false)}])))\n\n(defn drag-overlay [{:keys [x-start y-start on-mouse-move on-mouse-up size-dimension]}]\n  (fn [_]\n    [:div {:on-mouse-up   on-mouse-up\n           :on-mouse-move #(let [x (.-clientX %)\n                                 y (.-clientY %)]\n                             (.preventDefault %)\n                             (on-mouse-move\n                              {:x       x             :y       y\n                               :x-start x-start       :y-start y-start\n                               :dx      (- x x-start) :dy      (- y y-start)}))\n           :style         {:position             \"fixed\"\n                           :top                  0\n                           :left                 0\n                           :z-index              2147483647\n                           :height               \"100%\"\n                           :width                \"100%\"\n                           :cursor               (case size-dimension :width :col-resize :height :row-resize :grab)\n                           #_#_:background-color \"rgba(255,0,0,0.4)\"}}]))\n\n(defn resizer [{:keys [path keypath size offset overlay on-resize index header-dimension size-dimension style]}]\n  [:div {:class \"rc-nested-v-grid-resizer\"\n         :style (merge\n                 {:position :relative}\n                 (case size-dimension\n                   :width {:grid-row-start 1\n                           :grid-row-end   -1\n                           :width          0\n                           :margin-left    (+ size offset)}\n                   :height {:grid-column-start 1\n                            :grid-column-end   -1\n                            :height            0\n                            :margin-top        (+ size offset)})\n                 (case [header-dimension size-dimension]\n                   [:column :width]  {:grid-column-start (ngu/path->grid-line-name path)}\n                   [:column :height] {:grid-row-start (inc index)}\n                   [:row :height]    {:grid-row-start (ngu/path->grid-line-name path)}\n                   [:row :width]     {:grid-column-start (inc index)})\n                 style)}\n   [grid-line-button\n    {:position      (case size-dimension :width :right :height :bottom)\n     :on-mouse-down (fn [e]\n                      (reset! overlay [drag-overlay\n                                       {:x-start       (.-clientX e)\n                                        :y-start       (.-clientY e)\n                                        :header-dimension header-dimension\n                                        :size-dimension :size-dimension\n                                        :on-mouse-up   #(reset! overlay nil)\n                                        :on-mouse-move (fn [{:keys [dx dy]}]\n                                                         (on-resize {:header-dimension header-dimension\n                                                                     :size-dimension   size-dimension\n                                                                     :keypath   keypath\n                                                                     :size      (-> (case size-dimension :width dx :height dy)\n                                                                                    (+ size)\n                                                                                    (max 10))}))}]))}]])\n\n"]}