{"version":3,"sources":["re_com/debug.cljs"],"mappings":"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","names":["re-com.debug/log","G__71643","G__71644","re-com.config/log-format","cljs.core/name","cljs.core.comp","js/console.log","cljs.core/pr-str","cljs.pprint/pprint","re-com.debug/short-component-name","component-name","clojure.string.split","cljs.core/last","clojure.string/replace","re-com.debug/loggable-args","args","cljs.core/map?","cljs.core.dissoc","cljs.core.remove","cljs.core/nil?","cljs.core/second","cljs.core.into","var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","re-com.debug/log-on-alt-click*","p__71650","map__71651","cljs.core/--destructure-map","seq71648","G__71649","cljs.core/first","cljs.core/next","self__5751__auto__","event","re-com.debug/log-on-alt-click","p__71659","p__71660","map__71661","map__71662","cljs.core.get","seq71656","G__71657","show-all-args?","re-com.config/debug?","re_com.debug.log_on_alt_click_STAR_","G__71663","cljs.core/not","re-com.config/debug-parts?","G__71664","p__71672","map__71673","re-com.debug/->attr","src","debug-as","map__71677","rc-component","or__5043__auto__","reagent.impl.component/component-name","reagent.core/current-component","rc-args","ref-fn","el","re_com.debug.goog$module$goog$object.set","temp__5804__auto__","user-ref-fn","cljs.core.get_in","cljs.core/fn?","file","line","G__71684","cljs.core.assoc","G__71689","re-com.debug/component-stack","js/Error","re_com.debug.component_stack","stack","component","parent","cljs.core._EQ_","cljs.core.conj","re_com.debug.goog$module$goog$object.get","re-com.debug/validate-args-problems-style","re-com.debug/h1-style","re-com.debug/h2-style","re-com.debug/code-style","re-com.debug/error-style","re-com.debug/index-style","re-com.debug/collision-icon","re-com.debug/gear-icon","re-com.debug/blue-book-icon","re-com.debug/confused-icon","re-com.debug/globe-icon","re-com.debug/log-component-stack","js/console.groupCollapsed","seq__71696","cljs.core/seq","chunk__71697","count__71698","i__71699","map__71714","cljs.core/chunked-seq?","c__5565__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","map__71720","i","p1__71695#","p2__71694#","cljs.core.map_indexed","vec__71716","cljs.core.nth","vec__71724","js/console.groupEnd","re-com.debug/log-validate-args-error-problems","problems","seq__71737","chunk__71738","count__71739","i__71740","map__71760","map__71764","problem","arg-name","expected","actual","validate-fn-result","G__71762","cljs.core/Keyword","G__71766","p__71774","map__71775","re-com.debug/log-validate-args-error","element","source-url","cljs.core/empty?","re-com.config/root-url-for-compiler-output","js/console.group","cljs.core/deref","re-com.debug/validate-args-error","p__71781","map__71783","seq71780","self__5752__auto__","cljs.core.atom","cljs.core/reset!","internal-problems","internal-component","internal-args","reagent.core.create_class","this","argv","old-state","snapshot","p__71788","map__71789","cljs.core.merge","re-com.debug/stack-spy","p__71801","map__71802","seq71791","log-fn","first-child","p__71805","map__71806"],"sourcesContent":["(ns re-com.debug\n  (:require-macros\n   [re-com.core         :refer [handler-fn]])\n  (:require\n   [cljs.pprint            :refer [pprint]]\n   [goog.object            :as    gobj]\n   [cljs.reader            :refer [read-string]]\n   [clojure.string         :as    string]\n   [reagent.core           :as    r]\n   [reagent.impl.component :as    component]\n   [re-com.config          :refer [debug? debug-parts? root-url-for-compiler-output log-format]]))\n\n(def log\n  (case (some-> log-format name)\n    \"pr-str\" (comp js/console.log pr-str)\n    \"js\"     js/console.log\n    \"pretty\" pprint\n    js/console.log))\n\n(defn short-component-name\n  \"Returns the interesting part of component-name\"\n  [component-name]\n  ;; reagent.impl.component/component-name is used to obtain the component name, which returns\n  ;; e.g. re_com.checkbox.checkbox. We are only interested in the last part.\n  ;;\n  ;; Also some components are form-2 or form-3 so will return -return from the anonymous render\n  ;; function name. We keep the -render in the anonymous function name for JavaScript stack\n  ;; traces for non-validation errors (i.e. exceptions), but we are not interested in that here.\n  (-> component-name\n      (string/split #\"\\.\")\n      (last)\n      (string/replace #\"_render\" \"\")\n      (string/replace #\"_\" \"-\")))\n\n(defn loggable-args\n  \"Return a version of args which is stripped of uninteresting values, suitable for logging.\"\n  [args]\n  (if (map? args)\n    (->> ;; Remove args already represented in component hierarchy\n     (dissoc args :src :child :children :panel-1 :panel-2 :debug-as :theme :cell :edge)\n      ;; Remove args with nil value\n     (remove (comp nil? second))\n     (into {}))\n    args))\n\n(defn log-on-alt-click* [event & {:as args}]\n  (when (.-altKey event) (log args)))\n\n(defn log-on-alt-click [{:as args} & {:keys [show-all-args?] :or {show-all-args? false}}]\n  (if debug?\n    (handler-fn (log-on-alt-click* event (cond-> args (not show-all-args?) loggable-args)))\n    (if debug-parts?\n      (handler-fn (log-on-alt-click* event (cond-> args (not show-all-args?) loggable-args)))\n      nil)))\n\n(defn ->attr\n  [{:keys [src debug-as] :as args}]\n  (if-not debug? ;; This is in a separate `if` so Google Closure dead code elimination can run...\n    {}\n    (let [rc-component        (or (:component debug-as)\n                                  (short-component-name (component/component-name (r/current-component))))\n          rc-args             (loggable-args\n                               (or (:args debug-as)\n                                   args))\n          ref-fn              (fn [^js/Element el]\n                                ;; If the ref callback is defined as an inline function, it will get called twice during updates,\n                                ;; first with null and then again with the DOM element.\n                                ;;\n                                ;; See: 'Caveats with callback refs' at\n                                ;; https://reactjs.org/docs/refs-and-the-dom.html#caveats-with-callback-refs\n                                (when el\n                                  ;; Remember args so they can be logged later:\n                                  (gobj/set el \"__rc-args\" rc-args))\n                                ;; User may have supplied their own ref like so: {:attr {:ref (fn ...)}}\n                                (when-let [user-ref-fn (get-in args [:attr :ref])]\n                                  (when (fn? user-ref-fn)\n                                    (user-ref-fn el))))\n          {:keys [file line]} src]\n      (cond->\n       {:ref     ref-fn\n        :data-rc rc-component}\n        src\n        (assoc :data-rc-src (str file \":\" line))))))\n\n(defn component-stack\n  ([el]\n   (component-stack [] el))\n  ([stack ^js/Element el]\n   (if-not el ;; termination condition\n     stack\n     (let [component          (.. el -dataset -rc)\n           ^js/Element parent (.-parentElement el)]\n       (->\n        (if (= \"stack-spy\" component)\n          stack\n          (conj stack\n                {:el        el\n                 :src       (.. el -dataset -rcSrc)\n                 :component component\n                 :args      (gobj/get el \"__rc-args\")}))\n        (component-stack parent))))))\n\n(defn validate-args-problems-style\n  []\n  ;; [IJ] TODO: take min-width, min-height, height, width, size etc from valid args if present; w/ a floor for min-width/min-height\n  ;; [IJ] TODO: verify flexbox support in all cases.\n  {:min-width      \"32px\"\n   :min-height     \"32px\"\n   :font-size      \"1.4em\"\n   :text-align     \"center\"\n   :vertical-align \"center\"\n   :background      \"#FF4136\"})\n\n(def h1-style \"background: #FF4136; color: white; font-size: 1.4em; padding: 3px\")\n(def h2-style \"background: #0074D9; color: white; padding: 0.25em\")\n(def code-style \"font-family: monospace; font-weight: bold; background: #eee; color: #333; padding: 3px\")\n(def error-style \"font-weight: bold\")\n(def index-style \"font-weight: bold; font-size: 1.1em\")\n\n(def collision-icon \"\\uD83D\\uDCA5\")\n(def gear-icon \"\u2699\ufe0f\") ;; the trailing 'space' is an intentional modifier, not an actual space, so do not delete it!\n(def blue-book-icon \"\\uD83D\\uDCD8\")\n(def confused-icon \"\\uD83D\\uDE15\")\n(def globe-icon \"\\uD83C\\uDF10\")\n\n(defn log-component-stack\n  [stack]\n  (js/console.groupCollapsed (str \"\u2022 %c Component stack (click me)\") h2-style)\n  (doseq [{:keys [i el component src args]} (map-indexed #(assoc %2 :i (inc %1)) stack)]\n    (if component\n      (if src\n        (let [[file line] (string/split src #\":\")]\n          (if args\n            (js/console.log\n             (str \"%c\" i \"%c \" gear-icon \" %c[\" component \" ...]%c in file %c\" file \"%c at line %c\" line \"%c\\n      Parameters: %O\\n      DOM: %o\")\n             index-style \"\" code-style \"\" code-style \"\" code-style \"\" args el)\n            (js/console.log\n             (str \"%c\" i \"%c \" gear-icon \" %c[\" component \" ...]%c in file %c\" file \"%c at line %c\" line \"%c\\n      DOM: %o\")\n             index-style \"\" code-style \"\" code-style \"\" code-style \"\" el)))\n        (js/console.log\n         (str \"%c\" i \"%c \" gear-icon \" %c[\" component \" ...]%c\\n      Parameters: %O\\n      DOM: %o\")\n         index-style \"\" code-style \"\" args el))\n      (js/console.log (str \"%c\" i \"%c \" globe-icon \" %o\") index-style \"\" el)))\n  (js/console.groupEnd))\n\n(defn log-validate-args-error-problems\n  [problems]\n  (doseq [{:keys [problem arg-name expected actual validate-fn-result]} problems]\n    (case problem\n      ;; [IJ] TODO: :validate-fn-return\n      :unknown\n      (js/console.log\n       (str \"\u2022 %cUnknown parameter: %c\" arg-name)\n       error-style code-style)\n\n      :required\n      (js/console.log\n       (str \"\u2022 %cMissing required parameter: %c\" arg-name)\n       error-style code-style)\n\n      :ref\n      (js/console.log\n       (str \"\u2022 %cParameter %c\" arg-name \"%c expected a reactive atom but got a %c\" actual)\n       error-style code-style error-style code-style)\n\n      :validate-fn\n      (js/console.log\n       (str \"\u2022 %cParameter %c\" arg-name \"%c expected %c\" (:type expected) \"%c but got %c\" actual)\n       error-style code-style error-style code-style error-style code-style)\n\n      :validate-fn-map\n      (js/console.log\n       (str \"\u2022 %c\" (:message validate-fn-result))\n       error-style)\n\n      :part-top-level-collision\n      (js/console.log\n       (str \"\u2022 %cParameter %c\" arg-name \"%c has been passed both as a top-level argument and within %c:props%c\"\n            \"\\n  - Re-com doesn't know which value to use for configuring the %c\" arg-name\n            \"%c part. \\n  - Please delete one or the other.\")\n       error-style code-style error-style code-style error-style code-style error-style)\n\n      :part-top-level-unsupported\n      (js/console.log\n       (str \"\u2022 %cParameter %c\" arg-name \"%c has been passed as a top-level argument.\"\n            \"\\n  - This is unsupported. \"\n            \"However, it is supported within %c:props%c \\n  - Please declare %c\" arg-name\n            \"%c within the %c:props%c map.\")\n       error-style code-style error-style code-style error-style code-style error-style code-style error-style)\n\n      (js/console.log \"\u2022 \" confused-icon \" Unknown problem reported\"))))\n\n(defn log-validate-args-error\n  [element problems component-name {:keys [file line] :as src}]\n  (let [source-url    (when (not (empty? root-url-for-compiler-output)) (str root-url-for-compiler-output file \":\" line))]\n    (js/console.group (str \"%c\" collision-icon \" re-com validation error \") h1-style)\n    (if src\n      (if source-url\n        (js/console.log\n         (str \"\u2022 \" gear-icon \"%c[\" (short-component-name component-name) \" ...]%c in file %c\" file \"%c at line %c\" line \"%c see \" source-url)\n         code-style \"\" code-style \"\" code-style \"\")\n        (do\n          (js/console.log\n           (str \"\u2022 \" gear-icon \"%c[\" (short-component-name component-name) \" ...]%c in file %c\" file \"%c at line %c\" line)\n           code-style \"\" code-style \"\" code-style)\n          (js/console.log\n           (str \"\u2022 To enable clickable source urls, add %cre-com.config/root-url-for-compiler-output%c to your %c:closure-defines%c. See https://re-com.day8.com.au/#/config\")\n           code-style \"\" code-style \"\")))\n      (do\n        (js/console.log\n         (str \"\u2022 \" gear-icon \"%c[\" (short-component-name component-name) \" ...]\")\n         code-style)\n        (js/console.log (str \"\u2022 Learn how to add source coordinates to your components at https://re-com.day8.com.au/#/debug\"))))\n    (log-validate-args-error-problems problems)\n    (log-component-stack (component-stack @element))\n    (js/console.groupEnd)))\n\n(defn validate-args-error\n  [& {:keys [problems component args]}]\n  (let [element            (atom nil)\n        ref-fn             (fn [el]\n                             (when el\n                               (reset! element el)))\n        internal-problems  (atom problems)\n        internal-component (atom component)\n        internal-args      (atom args)]\n    (r/create-class\n     {:display-name \"validate-args-error\"\n\n      :component-did-mount\n      (fn [this]\n        (log-validate-args-error element @internal-problems @internal-component (:src @internal-args)))\n\n      :component-did-update\n      (fn [this argv old-state snapshot]\n        (log-validate-args-error element @internal-problems @internal-component (:src @internal-args)))\n\n      :reagent-render\n      (fn [& {:keys [problems component args]}]\n        (reset! internal-problems problems)\n        (reset! internal-component component)\n        (reset! internal-args args)\n        [:div\n         (merge\n          (->attr {:src      (:src args)\n                   :debug-as {:component component\n                              :args      args}\n                   :attr     {:ref ref-fn}})  ;; important that this ref-fn doesn't get overridden by (->attr ...)\n          {:title    \"re-com validation error. Look in the DevTools console.\"\n           :style    (validate-args-problems-style)})\n\n         collision-icon])})))\n\n(defn stack-spy\n  [& {:keys [component src]}]\n  (let [element (atom nil)\n        ref-fn  (fn [el]\n                  ;; If the ref callback is defined as an inline function, it will get called twice during updates,\n                  ;; first with null and then again with the DOM element.\n                  ;;\n                  ;; See: 'Caveats with callback refs' at\n                  ;; https://reactjs.org/docs/refs-and-the-dom.html#caveats-with-callback-refs\n                  (when el\n                    (reset! element el)))\n        log-fn  (fn []\n                  (let [el @element]\n                    (when el\n                      (let [first-child (first (.-children el))]\n                        (js/console.group \"%c[stack-spy ...]\" code-style)\n                        (log-component-stack (component-stack first-child))\n                        (js/console.groupEnd)))))]\n    (r/create-class\n     {:display-name         \"stack-spy\"\n      :component-did-mount  log-fn\n      :component-did-update log-fn\n      :reagent-render\n      (fn [& {:keys [component src]}]\n        [:div\n         (->attr {:src src :attr {:ref ref-fn}}) ;; important that this ref-fn doesn't get overridden by (->attr ...)\n         component])})))\n"]}