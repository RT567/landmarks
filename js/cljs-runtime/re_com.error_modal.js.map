{"version":3,"sources":["re_com/error_modal.cljs"],"mappings":"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","names":["re-com.error-modal/close-button","_","hover?","reagent.core.atom","p__72576","map__72577","cljs.core/--destructure-map","cljs.core.get","on-click","props","cljs.core.partial","cljs.core/reset!","re-com.util/x-button","cljs.core.merge","cljs.core/deref","var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","re-com.error-modal/error-modal","p__72590","map__72591","seq72584","self__5752__auto__","cljs.core/seq","severity","title","what-happened","what-happened-title","implications","implications-title","what-to-do","what-to-do-title","details","details-title","error","context","action","instructions","proceedable?","undone?","backdrop-on-click","on-close","closeable?","pre-theme","theme","defaults?","ask-to-report?","engineers-notified?","bug?","header","footer","heading","title-wrapper","modal","inner-wrapper","top-bar","triangle","body","text","code","args","re-com.theme/comp","part","p__72596","map__72597","part-value","opts","re_com.util.part","panel-padding","arrow-midpoint","arrow-side-length","arrow-points","or__5043__auto__","re-com.modal-panel/modal-panel","re-com.box/v-box","js/goog.DEBUG","re-com.box/h-box","re-com.text/title","re-com.util/px","re-com.box/gap","re-com.box/line","re-com.text/p"],"sourcesContent":["(ns re-com.error-modal\n  (:require-macros\n   [re-com.core :refer [at]])\n  (:require\n   [reagent.core :as r]\n   [re-com.box :as box]\n   [re-com.modal-panel :as mp]\n   [re-com.theme :as theme]\n   re-com.error-modal.theme\n   [re-com.text :as text]\n   [re-com.util :as u :refer [px]]))\n\n(defn close-button [_]\n  (let [hover? (r/atom nil)]\n    (fn [{:keys [on-click] :as props}]\n      [:div {:on-mouse-enter (partial reset! hover? true)\n             :on-mouse-leave (partial reset! hover? false)\n             :on-click       on-click\n             :style          {:padding \"12px 7px 7px 7px\"}}\n       [u/x-button (merge {:width        \"12px\"\n                           :height       \"12px\"\n                           :hover?       hover?\n                           :stroke       (if @hover? \"#000000\" \"#ffffff\")\n                           :stroke-width \"1.2px\"}\n                          props)]])))\n\n(defn error-modal\n  [& {:keys [severity title\n             what-happened what-happened-title\n             implications implications-title\n             what-to-do what-to-do-title\n             details details-title\n             error\n             context\n             action instructions\n             proceedable?\n             undone?\n             backdrop-on-click on-close closeable?\n             pre-theme theme\n             defaults?\n             ask-to-report?\n             engineers-notified?\n             bug?\n             header footer heading\n             title-wrapper\n             modal inner-wrapper top-bar\n             triangle body text code]\n      :or   {title               \"Sorry, you've hit a bug\"\n             what-happened-title \"What Just Happened?\"\n             implications-title  \"Implications\"\n             what-to-do-title    \"What Should You Do Now?\"\n             details-title       \"Low-level Details (for developers):\"\n             engineers-notified? true\n             severity            :error\n             closeable?          true\n             defaults?           true\n             bug?                true}\n      :as   args}]\n  (let [theme             (theme/comp pre-theme theme)\n        ;;TODO use both ns and raw keywords for parts\n        part              (fn [part-value & {:keys [props] :as opts}]\n                            (u/part\n                              part-value\n                              (merge opts\n                                     {:theme theme\n                                      :props (merge {:re-com {:error-modal {:severity severity}}}\n                                                    props)})))\n        panel-padding     31\n        arrow-midpoint    12\n        arrow-side-length (* 2 arrow-midpoint)\n        arrow-points      (str arrow-midpoint \",\" arrow-midpoint \" \"\n                               arrow-side-length \",\" 0 \" \"\n                               \"0,0\")\n        what-happened     (or what-happened\n                              (when defaults?\n                                [:span \"Your app encountered an unexpected error. \"\n                                 \"We currently don't have enough information to explain in more detail. \"\n                                 (when undone? \"Your last action has been undone. \")\n                                 (if engineers-notified?\n                                   [:<>\n                                    [:br]\n                                    [:i \"Our engineers have been notified. \"]\n                                    (when bug?\n                                      [:span \"This is probably a bug, so we're looking into it.\"])]\n                                   (when bug? [:span \"This is probably a bug.\"]))]))\n        implications      (or implications\n                              (when defaults?\n                                \"This app cannot continue on.\"))\n        what-to-do        (or what-to-do\n                              (when defaults?\n                                (str\n                                 (if proceedable?\n                                   \"You might be able to close this pop-up and continue on. Otherwise, restart this app.\"\n                                   \"You'll have to restart this app.\"))))]\n    (part modal\n          {:part ::modal\n           :impl mp/modal-panel\n           :props\n           {:backdrop-on-click backdrop-on-click\n            :parts             {:child-container {:style {:z-index 50}}}\n            :child\n            (part inner-wrapper\n                  {:part ::inner-wrapper\n                   :impl box/v-box\n                   :props\n                   {:src (at)\n                    :children\n                    [(part top-bar\n                           {:part ::top-bar\n                            :impl box/h-box\n                            :props\n                            {:src (at)\n                             :children\n                             [(part title-wrapper\n                                    {:part  ::title-wrapper\n                                     :impl  text/title\n                                     :props {:label (part title {:part ::title})\n                                             :level :level2}})\n                              (when closeable? [close-button {:on-click on-close\n                                                              :height   \"12px\"\n                                                              :width    \"12px\"}])]}})\n                     (part triangle\n                           {:part  ::triangle\n                            :props {:tag      :svg\n                                    :style    {:width     (px arrow-side-length)\n                                               :height    (px arrow-midpoint)\n                                               :transform (str \"translateX(\"\n                                                               (-> panel-padding (- arrow-midpoint) px) \")\")}\n                                    :children [[:polygon {:points arrow-points}]]}})\n                     (part body\n                           {:part  ::body\n                            :impl  box/v-box\n                            :props {:gap [:<>\n                                          [box/gap :size \"19px\"]\n                                          [box/line]\n                                          [box/gap :size \"7px\"]]\n                                    :children\n                                    [(when header\n                                       [:<>\n                                        [box/gap :size \"19px\"]\n                                        (part header\n                                              {:part ::header})])\n                                     [:<>\n                                      (when action\n                                        (part heading\n                                              {:part  ::heading\n                                               :impl  text/title\n                                               :props {:level :level2\n                                                       :label (part action {:part ::action})}}))\n                                      (when instructions\n                                        (part text\n                                              {:part  ::text\n                                               :impl  text/p\n                                               :props {:children [(part instructions\n                                                                        {:part ::instructions})]}}))\n                                      (when what-happened\n                                        [:<>\n                                         (when what-happened-title\n                                           (part heading\n                                                 {:part  ::heading\n                                                  :impl  text/title\n                                                  :props {:label (part what-happened-title\n                                                                       {:part ::what-happened-title})\n                                                          :level :level3}}))\n                                         (when what-happened\n                                           (part text\n                                                 {:part  ::text\n                                                  :impl  text/p\n                                                  :props {:children [(part what-happened\n                                                                           {:part ::what-happened})]}}))])\n                                      (when implications\n                                        [:<>\n                                         (part heading\n                                               {:part  ::heading\n                                                :impl  text/title\n                                                :props {:label (part implications-title\n                                                                     {:part ::implications-title\n                                                                      :impl [:<> implications-title]})\n                                                        :level :level3}})\n                                         (part text\n                                               {:part  ::text\n                                                :impl  text/p\n                                                :props {:children [(part implications\n                                                                         {:part ::implications\n                                                                          :impl [:<> implications]})]}})])\n                                      (when what-to-do\n                                        [:<>\n                                         (part heading\n                                               {:part  ::heading\n                                                :impl  text/title\n                                                :props {:label (part what-to-do-title\n                                                                     {:part ::what-to-do-title})\n                                                        :level :level3}})\n                                         (part text\n                                               {:part  ::text\n                                                :impl  text/p\n                                                :props {:children [(part what-to-do\n                                                                         {:part ::what-to-do\n                                                                          :impl [:<> what-to-do]})]}})])]\n                                     (when (or details error context)\n                                       [:<>\n                                        (part heading\n                                              {:part  ::heading\n                                               :props {:label    (part details-title\n                                                                       {:part ::details-title})\n                                                       :level    :level4\n                                                       :children [[:strong {:style {:font-size 12}}\n                                                                   (part details-title\n                                                                         {:part ::details-title})]]}})\n                                        (part code\n                                              {:part ::code\n                                               :props\n                                               {:children\n                                                [(when details\n                                                   (part details\n                                                         {:part ::details}))\n                                                 (when error\n                                                   (part error\n                                                         {:part ::error}))\n                                                 (when context\n                                                   (part context\n                                                         {:part ::context}))]}})])\n                                     (when footer\n                                       (part footer\n                                             {:part ::footer}))]}})]}})}})))\n"]}