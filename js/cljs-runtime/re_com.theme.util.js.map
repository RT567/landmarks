{"version":3,"sources":["re_com/theme/util.cljs"],"mappings":";AAEA,AAAA,gCAAA,wCAAAA,xEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,mEAAAF;;;AAAA,AAAA,CAAA,qEAAA,rEAAME,gFAAeI;AAArB,AACE,OAACC,cAAI,AAACC,+CAAOC,sBAAM,AAACC,kBAAQJ;;;AAD9B,CAAA,wDAAA,xDAAMJ;;AAAN;AAAA,CAAA,kDAAA,WAAAC,7DAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAGA,gCAAA,hCAAMQ,wEAAaC,MAAMC;AAAzB,AACE,4DAAA,rDAACC,+CAAOF,6DAAaG,gBAAMF;;AAE7B,2BAAA,3BAAMG,8DAAKC;AAAX,AAAc,GAAM,AAACC,wBAAQD;AAAOA;;AAAtB,GACM,AAACE,4BAAYF;AAAG,OAACV,cAAIU;;AAD3B,GAEM,MAAA,LAAMA;AAFZ;;AAAA,AAAA,0FAGuBA;;;;;;AAErC,mCAAA,+CAAAG,lFAAMI,8EAAgBC;AAAtB,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;QAAAA,JAAwDO;aAAxD,AAAAL,4CAAAF,eAAA,pEAAkCK;WAAlC,AAAAH,4CAAAF,eAAA,lEAAwCM;YAAxC,AAAAJ,4CAAAF,eAAA,nEAA6CR;AAA7C,AACE,OAACgB,uGAAMJ,IAAI,iBAAAK,WAAQ,EAAA,8BAAA,2CAAA,uDAAA,7HAAQ,OAASF,kBAAGA,uLAAWA;IAAvCE,eAAA,4YAAAA,1YACE,4BAAA,5BAACC,0BAAUH,4DACX,8CAAAE,SAAA,vDAACE,+GAAa,AAACC,6CAAK,AAACjB,yBAAI,AAAA,sFAAQS,MAAM,AAACT,yBAAIU;IAF9CI,eAAA,gZAAAA,9YAGE,4BAAA,5BAACC,0BAAUH,yDACX,8CAAAE,aAAA,3DAACE,gHAAY,AAACH,uGAAM,AAAA,mFAAOJ,KAAKE;AAJlC,AAAA,GAKE,4BAAA,5BAACI,0BAAUH;AACX,qDAAAE,aAAA,3DAACE,kHAAa,AAACH,uGAAM,AAAA,qFAAQJ,KAAKZ;;AANpCiB;;;;AAQb,AAAA,gCAAA,wCAAAlC,xEAAMsC;AAAN,AAAA,IAAArC,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAqC,mEAAAlC;;;AAAA,AAAA,CAAA,qEAAA,rEAAMkC,gFAAeE;AAArB,AAAyB,uFAAA,hFAACC,+CAAOb,oEAAkBY;;;AAAnD,CAAA,wDAAA,xDAAMF;;AAAN;AAAA,CAAA,kDAAA,WAAAC,7DAAMD;AAAN,AAAA,IAAA9B,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAA8B;;;AAAA","names":["var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","re-com.theme.util/merge-class","seq71153","self__5752__auto__","cljs.core/seq","classes","cljs.core/vec","cljs.core.filter","cljs.core/some?","cljs.core/flatten","re-com.theme.util/merge-style","props","style","cljs.core.update","cljs.core/merge","re-com.theme.util/->v","x","cljs.core/vector?","cljs.core/sequential?","p__71160","map__71161","cljs.core/--destructure-map","cljs.core.get","re-com.theme.util/merge-props-rf","acc","class","attr","m","cljs.core.merge","G__71162","cljs.core/contains?","cljs.core.assoc","cljs.core.into","re-com.theme.util/merge-props","seq71165","ms","cljs.core.reduce"],"sourcesContent":["(ns re-com.theme.util)\n\n(defn merge-class [& classes]\n  (vec (filter some? (flatten classes))))\n\n(defn merge-style [props style]\n  (update props :style merge style))\n\n(defn ->v [x] (cond (vector? x)     x\n                    (sequential? x) (vec x)\n                    (nil? x)        nil\n                    :else           [x]))\n\n(defn merge-props-rf [acc {:keys [class attr style] :as m}]\n  (merge acc (cond-> (if-not (string? m) m {:style [m]})\n               (contains? m :class)\n               (assoc :class (into (->v (:class acc)) (->v class)))\n               (contains? m :attr)\n               (assoc :attr (merge (:attr acc) attr))\n               (contains? m :style)\n               (assoc :style (merge (:style acc) style)))))\n\n(defn merge-props [& ms] (reduce merge-props-rf {} ms))\n\n"]}